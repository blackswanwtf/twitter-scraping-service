# ============================================================================
# Black Swan Twitter Scraping Service - Environment Configuration
# ============================================================================
# Copy this file to .env and fill in your actual values
# Never commit the .env file to version control

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================

# Port for the Express server (default: 8081)
PORT=8081

# Node.js environment (development, production, test)
NODE_ENV=development

# ============================================================================
# TWITTER AUTHENTICATION - COOKIE-BASED (PREFERRED METHOD)
# ============================================================================
# This method uses browser cookies and is more reliable
# To get these values:
# 1. Log into Twitter in your browser
# 2. Open Developer Tools (F12)
# 3. Go to Application/Storage → Cookies → https://twitter.com
# 4. Copy the following cookie values:

# Twitter authentication token from browser cookies
TWITTER_COOKIES_AUTH_TOKEN=your_auth_token_here

# CSRF token for Twitter API requests
TWITTER_COOKIES_CT0=your_ct0_token_here

# Guest ID for Twitter API access
TWITTER_COOKIES_GUEST_ID=your_guest_id_here

# ============================================================================
# TWITTER AUTHENTICATION - USERNAME/PASSWORD (FALLBACK METHOD)
# ============================================================================
# This method is used as a fallback if cookie authentication fails
# For 2FA accounts, you'll need to provide the 2FA secret

# Twitter username (without @)
TWITTER_USERNAME=your_twitter_username

# Twitter email address
TWITTER_EMAIL=your_twitter_email

# Twitter password
TWITTER_PASSWORD=your_twitter_password

# 2FA secret (if you have 2FA enabled)
# Get this from your authenticator app or backup codes
TWITTER_2FA_SECRET=your_2fa_secret_here

# ============================================================================
# FIREBASE CONFIGURATION
# ============================================================================
# The service uses Firebase Firestore for data storage
# Make sure you have:
# 1. Created a Firebase project
# 2. Enabled Firestore Database
# 3. Generated a service account key
# 4. Placed the serviceAccountKey.json file in the project root

# Firebase project ID (optional - usually auto-detected from serviceAccountKey.json)
# FIREBASE_PROJECT_ID=your_firebase_project_id

# ============================================================================
# PROCESSING CONFIGURATION (OPTIONAL)
# ============================================================================
# These values can be modified in the code if needed
# Default values are shown below for reference

# How far back to look for tweets (in minutes, default: 1440 = 24 hours)
# TWEET_LOOKBACK_MINUTES=1440

# How often to run the processing cycle (in milliseconds, default: 600000 = 10 minutes)
# PROCESSING_INTERVAL=600000

# Delay between processing different accounts (in milliseconds, default: 5000 = 5 seconds)
# RATE_LIMIT_DELAY=5000

# Delay between token account searches (in milliseconds, default: 10000 = 10 seconds)
# TOKEN_RATE_LIMIT_DELAY=10000

# Maximum tweets to fetch per account per cycle (default: 100)
# MAX_TWEETS_PER_ACCOUNT=100

# Maximum tweets to fetch per token search (default: 100)
# MAX_TWEETS_PER_TOKEN_SEARCH=100

# Size of in-memory cache for duplicate detection (default: 25000)
# DUPLICATE_CACHE_SIZE=25000

# Batch size for Firestore duplicate checks (default: 25, Firestore IN limit is 30)
# BATCH_DUPLICATE_CHECK_SIZE=25

# ============================================================================
# SECURITY NOTES
# ============================================================================
# 1. Never commit this file or the .env file to version control
# 2. Keep your Twitter credentials secure and don't share them
# 3. Regularly rotate your Twitter authentication tokens
# 4. Use environment-specific configurations for different deployments
# 5. Consider using a secrets management service for production deployments

# ============================================================================
# EXAMPLE VALUES (DO NOT USE IN PRODUCTION)
# ============================================================================
# PORT=8081
# NODE_ENV=development
# TWITTER_COOKIES_AUTH_TOKEN=abc123def456ghi789jkl012mno345pqr678stu901vwx234yz
# TWITTER_COOKIES_CT0=def456ghi789jkl012mno345pqr678stu901vwx234yz567abc890
# TWITTER_COOKIES_GUEST_ID=1234567890123456789
# TWITTER_USERNAME=example_user
# TWITTER_EMAIL=user@example.com
# TWITTER_PASSWORD=your_secure_password
# TWITTER_2FA_SECRET=ABCD1234EFGH5678IJKL9012MNOP3456QRST7890UVWX2345
